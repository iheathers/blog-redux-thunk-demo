{"version":3,"sources":["reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","components/UserHeader.js","components/PostItem.js","apis/jsonPlaceholder.js","actions/index.js","components/PostList.js","components/App.js","index.js"],"names":["combineReducers","posts","state","action","type","console","log","payload","users","UserHeader","user","this","props","className","name","React","Component","connect","ownProps","find","id","userId","PostItem","post","title","body","jsonPlaceholder","axios","create","baseURL","fetchPosts","dispatch","a","get","response","data","fetchUser","PostList","renderList","map","key","fetchPostsAndUsers","getState","_","uniq","forEach","App","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"gOAIeA,cAAgB,CAC3BC,MCLW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAEnC,OAAQA,EAAOC,MACX,IAAK,cAED,OADAC,QAAQC,IAAI,eAAgBJ,GACrBC,EAAOI,QAElB,QAEI,OADAF,QAAQC,IAAI,WAAYJ,GACjBA,IDHfM,MENW,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCAEnC,OAAQA,EAAOC,MACX,IAAK,aAED,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOI,UAE7B,QAEI,OAAOL,M,oCCNbO,E,uKAEO,IAEEC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAIA,yBAAKG,UAAU,UAAUH,EAAKI,MAHxB,S,GAPOC,IAAMC,WAoBhBC,eALS,SAACf,EAAOgB,GAE5B,MAAO,CAAER,KAAMR,EAAMM,MAAMW,MAAK,SAAAT,GAAI,OAAIA,EAAKU,KAAOF,EAASG,aAGzB,GAAzBJ,CAEZR,GCRYa,EAdE,SAACV,GACd,OACA,oCACI,uBAAGC,UAAU,oCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACV,4BAAKD,EAAMW,KAAKC,OAChB,2BAAIZ,EAAMW,KAAKE,OAEpB,kBAAC,EAAD,CAAYJ,OAAQT,EAAMW,KAAKF,Y,iDCV9BK,E,OAAkBC,EAAMC,OAAO,CACxCC,QAAS,yCCYAC,EAAa,WACxB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEACkBN,EAAgBO,IAAI,UADtC,OACCC,EADD,OAELH,EAAS,CACP3B,KAAM,cACNG,QAAS2B,EAASC,OAJf,2CAAP,uDASWC,EAAY,SAACf,GACxB,8CAAO,WAAOU,GAAP,eAAAC,EAAA,sEACkBN,EAAgBO,IAAhB,iBAA8BZ,IADhD,OACCa,EADD,OAGLH,EAAS,CAAE3B,KAAM,aAAcG,QAAS2B,EAASC,OAH5C,2CAAP,uDCpBIE,E,4MAMJC,WAAa,WACX,OAAO,EAAK1B,MAAMX,MAAMsC,KAAI,SAAChB,GAC3B,OACE,yBAAKiB,IAAKjB,EAAKH,GAAIP,UAAU,QAC3B,kBAAC,EAAD,CAAUU,KAAMA,S,kEAPtBZ,KAAKC,MAAM6B,uB,+BAcX,OAAO,yBAAK5B,UAAU,2BAA2BF,KAAK2B,kB,GAjBnCvB,IAAMC,WA0BdC,eALS,SAACf,GAEvB,MAAO,CAAED,MAAOC,EAAMD,MAAOS,KAAMR,EAAMQ,QAGH,CACtC+B,mBD7BgC,WAChC,8CAAO,WAAOV,EAAUW,GAAjB,SAAAV,EAAA,sEAECD,EAASD,KAFV,OAGWa,IAAEC,KAAKD,IAAEJ,IAAIG,IAAWzC,MAAO,WAEvC4C,SAAQ,SAAAxB,GAAM,OAAIU,EAASK,EAAUf,OALxC,2CAAP,0DC2BaJ,CAEZoB,GC3BYS,EAJH,WACR,OAAO,yBAAKjC,UAAU,gBAAe,kBAAC,EAAD,QCInCkC,EAAQC,YAAYC,EAAUC,YAAgBC,MAGpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.e51f1b6b.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n})","export default (state = [], action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'FETCH_POSTS':\r\n            console.log(\"fetch posts:\", state)\r\n            return action.payload;\r\n    \r\n        default:\r\n            console.log(\"default:\", state)\r\n            return state;\r\n           \r\n    }\r\n}","export default (state = [], action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'FETCH_USER':\r\n            \r\n            return [...state, action.payload];\r\n    \r\n        default:\r\n            \r\n            return state;\r\n           \r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component{\r\n    \r\n    render(){\r\n       \r\n       const { user } = this.props;\r\n\r\n       if (!user){\r\n           return null;\r\n       }\r\n        return (\r\n            <div className=\"header\">{user.name}</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   \r\n    return { user: state.users.find(user => user.id === ownProps.userId) }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n   \r\n})(UserHeader);","import React from \"react\";\r\nimport UserHeader from \"./UserHeader\";\r\n\r\nconst PostItem = (props) => {\r\n    return (\r\n    <>\r\n        <i className=\"large middle aligned icon user \" />\r\n        <div className=\"content\">\r\n            <div className=\"description\">\r\n                 <h2>{props.post.title}</h2>\r\n                 <p>{props.post.body}</p>\r\n            </div>\r\n            <UserHeader userId={props.post.userId}/>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default PostItem;","import axios from 'axios';\r\n\r\nexport const jsonPlaceholder = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n})","import _ from 'lodash';\r\nimport { jsonPlaceholder } from \"../apis/jsonPlaceholder\";\r\n\r\n\r\nexport const fetchPostsAndUsers = () => {\r\n  return async (dispatch, getState) => {\r\n    \r\n    await dispatch(fetchPosts());\r\n    const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n\r\n    userIds.forEach(userId => dispatch(fetchUser(userId)) )\r\n\r\n  }\r\n}\r\n\r\nexport const fetchPosts = () => {\r\n  return async (dispatch) => {\r\n    const response = await jsonPlaceholder.get(\"/posts\");\r\n    dispatch({\r\n      type: \"FETCH_POSTS\",\r\n      payload: response.data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchUser = (userId) => {\r\n  return async (dispatch) => {\r\n    const response = await jsonPlaceholder.get(`/users/${userId}`);\r\n    \r\n    dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n};\r\n}\r\n\r\n\r\n\r\n// export const fetchUser = (userId) => {\r\n//   return (dispatch) => {\r\n//     _fetchUser(userId, dispatch)\r\n//   };\r\n// };\r\n\r\n// const _fetchUser = _.memoize( async (userId, dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`/users/${userId}`);\r\n    \r\n//     dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n// })\r\n//","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PostItem from \"./PostItem\";\r\nimport { fetchPostsAndUsers } from \"../actions\";\r\n\r\nclass PostList extends React.Component {\r\n  componentDidMount() {\r\n    //console.log(this.props.fetchPosts());\r\n    this.props.fetchPostsAndUsers();\r\n  }\r\n\r\n  renderList = () => {\r\n    return this.props.posts.map((post) => {\r\n      return (\r\n        <div key={post.id} className=\"item\">\r\n          <PostItem post={post} />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state.posts)\r\n  return { posts: state.posts, user: state.user };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchPostsAndUsers,\r\n})(PostList);\r\n","import React from 'react';\r\nimport PostList from './PostList';\r\n\r\nconst App = () => {\r\n    return <div className=\"ui container\"><PostList/></div>\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport App from \"./components/App\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk))\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}